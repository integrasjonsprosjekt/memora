{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v1/decks": {
            "post": {
                "description": "Creates a new deck in Firestore and returns its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Decks"
                ],
                "summary": "Create a deck",
                "parameters": [
                    {
                        "description": "Deck info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateDeck"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ReturnID"
                        }
                    }
                }
            }
        },
        "/api/v1/decks/{deckID}": {
            "get": {
                "description": "Retrieves deck information from Firestore by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Decks"
                ],
                "summary": "Get a deck",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deck ID",
                        "name": "deckID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeckResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a deck from Firestore by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Decks"
                ],
                "summary": "Delete a deck along with its cards",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deck ID",
                        "name": "deckID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "description": "Updates a decks data in Firestore by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Decks"
                ],
                "summary": "Update a deck",
                "parameters": [
                    {
                        "description": "Deck info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateDeck"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeckResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/decks/{deckID}/cards": {
            "get": {
                "description": "Retrieves cards from a specified deck in Firestore",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Decks"
                ],
                "summary": "Get cards in a deck",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deck ID",
                        "name": "deckID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "20",
                        "description": "Number of cards to retrieve",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Cursor for pagination",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CardsResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new card in a specified deck and returns the cards",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Decks"
                ],
                "summary": "Create a card in a deck",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deck ID",
                        "name": "deckID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Card info (can be MultipleChoiceCard, FrontBackCard, OrderedCard, or BlanksCard)",
                        "name": "card",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    }
                }
            }
        },
        "/api/v1/decks/{deckID}/cards/{cardID}": {
            "get": {
                "description": "Retrieves card information from Firestore by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Decks"
                ],
                "summary": "Get a card in a deck",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deck ID",
                        "name": "deckID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Card ID",
                        "name": "cardID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AnyCard"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a card in a deck in Firestore by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Decks"
                ],
                "summary": "Update a card in a deck",
                "parameters": [
                    {
                        "description": "Deck info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AnyCard"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Deck ID",
                        "name": "deckID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Card ID",
                        "name": "cardID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a card from a specified deck by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Decks"
                ],
                "summary": "Delete a card in a deck",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deck ID",
                        "name": "deckID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Card ID",
                        "name": "cardID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/api/v1/decks/{deckID}/emails": {
            "patch": {
                "description": "Updates a decks shared emails in Firestore by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Decks"
                ],
                "summary": "Update a decks' emails",
                "parameters": [
                    {
                        "description": "Deck info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateDeckEmails"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeckResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/status": {
            "get": {
                "description": "Returns version and uptime",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Status page for the API",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/status.Status"
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "post": {
                "description": "Creates a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a user and return their ID",
                "parameters": [
                    {
                        "description": "User info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "description": "Return user information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "GET a user from firestore by their ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            },
            "delete": {
                "description": "Return card information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Deletes a user from firestore by their ID",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "description": "Return updated user information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update a user in firestore by their ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User info to update",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PatchUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{id}/decks": {
            "get": {
                "description": "Return the user's owned and shared decks",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "GET a users' owned and shared decks from firestore by their ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DisplayDeck"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AnyCard": {
            "type": "object",
            "properties": {
                "blanksCard": {
                    "$ref": "#/definitions/models.BlanksCard"
                },
                "frontBackCard": {
                    "description": "@swagger:oneOf",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.FrontBackCard"
                        }
                    ]
                },
                "multipleChoiceCard": {
                    "$ref": "#/definitions/models.MultipleChoiceCard"
                },
                "orderedCard": {
                    "$ref": "#/definitions/models.OrderedCard"
                }
            }
        },
        "models.BlanksCard": {
            "type": "object",
            "required": [
                "answers",
                "question",
                "type"
            ],
            "properties": {
                "answers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "question": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.CardsResponse": {
            "type": "object",
            "properties": {
                "cards": {
                    "type": "array",
                    "items": {}
                },
                "has_more": {
                    "type": "boolean"
                }
            }
        },
        "models.CreateDeck": {
            "type": "object",
            "required": [
                "owner_id",
                "title"
            ],
            "properties": {
                "owner_id": {
                    "type": "string"
                },
                "shared_emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.CreateUser": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.DeckResponse": {
            "type": "object",
            "properties": {
                "cards": {
                    "type": "array",
                    "items": {}
                },
                "id": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "shared_emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.DisplayDeck": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.FrontBackCard": {
            "type": "object",
            "required": [
                "back",
                "front",
                "type"
            ],
            "properties": {
                "back": {
                    "type": "string"
                },
                "front": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.MultipleChoiceCard": {
            "type": "object",
            "required": [
                "options",
                "question",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "options": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "question": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.OrderedCard": {
            "type": "object",
            "required": [
                "options",
                "question",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "question": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.PatchUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 12
                }
            }
        },
        "models.ReturnID": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "models.UpdateDeck": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                }
            }
        },
        "models.UpdateDeckEmails": {
            "type": "object",
            "required": [
                "opp",
                "shared_emails"
            ],
            "properties": {
                "opp": {
                    "type": "string",
                    "enum": [
                        "add",
                        "remove"
                    ]
                },
                "shared_emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "status.Status": {
            "type": "object",
            "properties": {
                "uptime": {
                    "description": "Indicates the duration of the service uptime",
                    "type": "integer"
                },
                "version": {
                    "description": "Version of the service",
                    "type": "string"
                }
            }
        }
    }
}